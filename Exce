@Override
public Source validateBusinessRules(ValidateArrangementForPaymentRequest request) {
    try {
        JAXBContext context = JAXBContext.newInstance(Envelope.class);
        Unmarshaller unmarshaller = context.createUnmarshaller();
        Marshaller marshaller = context.createMarshaller();

        InputStream xml = getClass().getClassLoader().getResourceAsStream("static-response/response1.xml");
        Envelope envelope = (Envelope) unmarshaller.unmarshal(xml);

        // Modify response
        ValidateArrangementForPaymentResponse response = envelope.getBody().getValidateArrangementForPaymentResponse();
        String brand = request.getRequestHeader().getOperatingBrand();
        if ("ALL".equalsIgnoreCase(brand)) {
            ResponseHeader header = response.getResponse().getResponseHeader();
            ProcessingIdentifier id = header.getResponseId();
            if (id == null) id = new ProcessingIdentifier();
            id.setSystemId("ModifiedESP");
            id.setTransactionId("ModifiedTxn123");
            header.setResponseId(id);
        }

        // Marshal back to byte array and return as Source
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        marshaller.marshal(envelope, output);
        ByteArrayInputStream input = new ByteArrayInputStream(output.toByteArray());
        return new StreamSource(input);

    } catch (Exception e) {
        throw new SchemaValidationException("Unable to process SOAP response", e);
    }
}
